{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/page-not-found/page-not-found.component.ts","./src/app/components/page-not-found/page-not-found.component.html","./src/app/components/receive-message/receive-message.component.ts","./src/app/components/receive-message/receive-message.component.html","./src/app/components/send-message/send-message.component.ts","./src/app/components/send-message/send-message.component.html","./src/app/components/story/story.component.ts","./src/app/components/story/story.component.html","./src/app/models/MessageRequest.ts","./src/app/services/message.service.ts","./src/app/utility/constants/data.ts","./src/app/utility/loader-interceptor/loader-interceptor.service.ts","./src/app/utility/loader-service/loader.service.ts","./src/app/utility/loader/loader.component.ts","./src/app/utility/loader/loader.component.html","./src/app/utility/path-resolver/path-resolve.service.ts","./src/app/utility/path-resolver/paths.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { paths } from './utility/path-resolver/paths';\nimport { HomeComponent } from './components/home/home.component';\nimport { SendMessageComponent } from './components/send-message/send-message.component';\nimport { ReceiveMessageComponent } from './components/receive-message/receive-message.component';\nimport { StoryComponent } from './components/story/story.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { PathResolveService } from './utility/path-resolver/path-resolve.service';\n\nconst routes: Routes = [\n  { path: '', redirectTo: paths.home, pathMatch: 'full' },\n  { path: paths.home, component: HomeComponent },\n  { path: paths.send, component: SendMessageComponent },\n  { path: paths.fetch, component: ReceiveMessageComponent },\n  { path: paths.story, component: StoryComponent },\n  { path: '**', resolve: { path: PathResolveService }, component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'SayThankYou';\n}\n","<router-outlet></router-outlet>\n<app-loader></app-loader>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { SendMessageComponent } from './components/send-message/send-message.component';\nimport { ReceiveMessageComponent } from './components/receive-message/receive-message.component';\nimport { StoryComponent } from './components/story/story.component';\nimport { LoaderComponent } from './utility/loader/loader.component';\nimport { LoaderInterceptorService } from './utility/loader-interceptor/loader-interceptor.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    FooterComponent,\n    NavbarComponent,\n    PageNotFoundComponent,\n    SendMessageComponent,\n    ReceiveMessageComponent,\n    StoryComponent,\n    LoaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LoaderInterceptorService,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}","<footer class=\"footer\">\n    <p class=\"footer-link\">Served with ❤️ by <a href=\"https://github.com/rahul-kabra\" target=\"_blank\"\n            rel=\"noreferrer noopener\">Rahul</a></p>\n</footer>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  navigateToSend() {\n    this.router.navigateByUrl('/send');\n  }\n\n  navigateToStory() {\n    this.router.navigateByUrl('/story');\n  }\n}","<div class=\"container\">\n    <app-navbar></app-navbar>\n\n    <div class=\"hero-section custom-top-margin\">\n        <p>All of us have people in our lives who have been with us through thick and thin. ⌛️ ⏳ They have cheered us in\n            gloomy times, helped us out in a difficult phase and have brought a smile to our face and made us happy when\n            we were sad. 😇</p>\n        <p>What they did or still continue to do for us is boundless and will fall short if we were to express it in\n            words. 🔮</p>\n        <p>Let's take this opportunity to thank them for everything and do our bit to convey our utmost gratitude to\n            them. 🎉</p>\n        <p>Read more about the <span class=\"highlight\" (click)=\"navigateToStory()\">Story.</span> ✍️</p>\n        <p>Or, <span class=\"highlight\" (click)=\"navigateToSend()\">Send</span> a heartfelt thank you note to them. 💌</p>\n        <h4>To all the awesome people 🧑👧👱‍♂️👱‍♀️👴👵 out there who deserve it today and forever. 🙌 Let's,</h4>\n        <h3>Appreciate them. 👏 Convey how thankful we are to them. 🙏 Express our gratitude to them. 🤝</h3>\n        <h3>MAKE SOMEONE HAPPY TODAY. 🎁 🎈 🤩</h3>\n    </div>\n\n    <app-footer></app-footer>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  navigateToStory() {\n    this.router.navigateByUrl('/story');\n  }\n\n  navigateToHome() {\n    this.router.navigateByUrl('/home');\n  }\n}","<div id=\"navbar-container\" class=\"navbar\">\n    <div id=\"site-logo-div\" (click)=\"navigateToHome()\">\n        <img src=\"assets/site-logo.png\" alt=\"say-thank-you\">\n    </div>\n    <div id=\"story\">\n        <p><span (click)=\"navigateToStory()\">STORY</span></p>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n  path: string;\n  isExpectedPath: boolean = false;\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data.pipe(take(1))\n      .subscribe((data: { path: string }) => {\n        this.path = data.path;\n        console.log(this.path);\n      });\n    console.log(this.path);\n    if (this.path === null || this.path === undefined)\n      this.isExpectedPath = false;\n    else\n      this.isExpectedPath = true;\n    console.log(this.isExpectedPath);\n  }\n}","<div class=\"container\">\n    <app-navbar></app-navbar>\n\n    <div id=\"page-not-found-div\" class=\"custom-top-margin\">\n        <h1>4😶4</h1>\n        <h3>Page Not Found</h3>\n        <p>You seem to have hit an unexpected hurdle. 😵</p>\n        <p *ngIf=\"isExpectedPath === true\">From what we understand 💡, you might want to go to the <a class=\"highlight\"\n                [routerLink]=\"path\">\"{{ path }}\"</a> page.</p>\n    </div>\n\n    <app-footer></app-footer>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MessageService } from '../../services/message.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SECRET_CODE_INFO, ANONYMOUS_ANSWER } from '../../utility/constants/data';\n\n@Component({\n  selector: 'app-receive-message',\n  templateUrl: './receive-message.component.html',\n  styleUrls: ['./receive-message.component.scss']\n})\nexport class ReceiveMessageComponent implements OnInit {\n  receiveForm: FormGroup;\n  tokenPassed: boolean;\n  data: any;\n  message: string;\n  personInfo: string;\n  challengeQuestion: string;\n  fromPerson: string;\n  toPerson: string;\n  tokenInvalidMessage: string;\n  noTokenPassedMessage: string;\n  isError: boolean;\n  isSubmitError: boolean;\n  incorrectSecretCode: string;\n  incorrectAnswer: string;\n  isSubmitIncorrectSecretCode: boolean;\n  secretCodeInfo = SECRET_CODE_INFO;\n\n  constructor(private receiveService: MessageService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit() {\n    let token = encodeURIComponent(this.route.snapshot.queryParams.token);\n    if (token !== \"undefined\" && token.trim() !== \"\") {\n      this.tokenPassed = true;\n      this.fetchQuestionnaire(token);\n      this.createForm();\n    }\n    else {\n      this.tokenPassed = false;\n      this.noTokenPassedMessage = \"Where there is a vault 🔒 with secrets in it, there will be a key 🔑 as well. You seem to be missing out on that essential bit. 😒 You need to pass the appropriate token.\"\n    }\n  }\n\n  createForm(): void {\n    this.receiveForm = new FormGroup({\n      'secretCode': new FormControl('', []),\n      'challengeAnswer': new FormControl('', [])\n    });\n  }\n\n  fetchQuestionnaire(token: string) {\n    this.receiveService.fetchQuestionnaire(token).subscribe(\n      (response: any) => {\n        this.fromPerson = response.fromPerson;\n        this.toPerson = response.toPerson;\n        this.personInfo = \"Hey \" + response.toPerson + \"! 👋 There's a lovely message for you from \" + response.fromPerson + \". 📜 However, to make this more fun, you need to pass a simple quiz comprising of the questions below and fetch your reward. 👇\"\n        this.challengeQuestion = response.challengeQuestion;\n        this.isError = false;\n      },\n      (error: any) => {\n        this.isError = true;\n        if (error.status === 401) {\n          this.tokenInvalidMessage = \"Hate to break it to you, but we this is a \" + error.error.message + \" 🙄\";\n        }\n      }\n    );\n  }\n\n  onSubmit() {\n    let secretCode = this.receiveForm.controls['secretCode'].value;\n    let challengeAnswer = this.receiveForm.controls['challengeAnswer'].value;\n    let answer = (challengeAnswer.trim() === \"\" || challengeAnswer === null ? ANONYMOUS_ANSWER : challengeAnswer);\n    this.receiveService.getMessage(secretCode, answer).subscribe(\n      (response: any) => {\n        this.message = response.data;\n        this.typewriterEffect(response.data);\n        this.isSubmitError = false;\n      },\n      (error: any) => {\n        this.isSubmitError = true;\n        if (error.status === 401) {\n          this.isSubmitIncorrectSecretCode = true;\n          this.incorrectSecretCode = error.error.message + \" We were definitely not expecting this. 😮 Please try with the proper secret code again.\"\n        }\n        if (error.status === 417) {\n          this.isSubmitIncorrectSecretCode = false;\n          this.incorrectAnswer = error.error.message + \" And we were expecting it to be a walk in the park for you. 😲\";\n        }\n      }\n    );\n  }\n\n  openOverlay() {\n    document.getElementById('overlay').classList.add('open');\n  }\n\n  closeOverlay() {\n    document.getElementById('overlay').classList.remove('open');\n  }\n\n  typewriterEffect(data: string) {\n    let modifiedData = data.split(\"\");\n    let result = \"\";\n    for (let i = 0; i < modifiedData.length; i++) {\n      setTimeout(function () {\n        result += modifiedData[i];\n        document.getElementById('actual-message').innerText = result;\n      }, 50 * i);\n    }\n  }\n\n  navigateToSend() {\n    this.router.navigateByUrl('/send');\n  }\n}\n","<div class=\"container\">\n    <app-navbar></app-navbar>\n\n    <div id=\"no-token-div\" class=\"custom-top-margin\" *ngIf=\"tokenPassed === false\">\n        {{ noTokenPassedMessage }}\n    </div>\n\n    <div id=\"invalid-token-div\" class=\"custom-top-margin\" *ngIf=\"tokenPassed === true && isError === true\">\n        <p>{{ tokenInvalidMessage }}</p>\n    </div>\n\n    <div class=\"form-input custom-top-margin\" *ngIf=\"tokenPassed === true && isError === false\">\n        <form [formGroup]=\"receiveForm\" (ngSubmit)=\"onSubmit()\" novalidate>\n\n            <p>{{ personInfo }}</p>\n\n            <hr class=\"flair\">\n\n            <div id=\"secret-code-div\" class=\"input-div-styles\">\n                <p>{{ secretCodeInfo }}</p>\n                <div class=\"floating\">\n                    <input required id=\"secretCode\" class=\"floating-input\" name=\"secretCode\"\n                        formControlName=\"secretCode\" type=\"text\" placeholder=\"Enter the code...\" />\n                    <label for=\"secretCode\" class=\"floating-label\" data-content=\"Enter the code...\"></label>\n                </div>\n            </div>\n\n            <hr class=\"center-square\">\n\n            <div id=\"challenge-answer-div\" class=\"input-div-styles\">\n                <p>{{ fromPerson }} believes that you should be able to answer this fun question and we sure hope so\n                    too. 🤞</p>\n                <p>{{ challengeQuestion }}</p>\n                <div class=\"floating\">\n                    <input id=\"challengeAnswer\" class=\"floating-input\" name=\"challengeAnswer\"\n                        formControlName=\"challengeAnswer\" type=\"text\" placeholder=\"Enter the answer...\" />\n                    <label for=\"challengeAnswer\" class=\"floating-label\" data-content=\"Enter the answer...\"></label>\n                </div>\n            </div>\n\n            <div class=\"receive-form-button-div\">\n                <button type=\"submit\" [disabled]=\"!receiveForm.valid\" class=\"btn\" (click)=\"openOverlay()\">\n                    <span>Submit</span>\n                </button>\n            </div>\n        </form>\n    </div>\n\n    <app-footer></app-footer>\n\n    <div class=\"overlay\" id=\"overlay\">\n        <nav class=\"overlay-menu\">\n            <p *ngIf=\"isSubmitError === false\">Hola, {{ toPerson }} 😎</p>\n            <p id=\"actual-message\" *ngIf=\"isSubmitError === false\">{{ message }}</p>\n            <p *ngIf=\"isSubmitError === false\">Cheers, {{ fromPerson }} 🥳</p>\n            <hr *ngIf=\"isSubmitError === false\" class=\"flair\">\n            <p *ngIf=\"isSubmitError === false\">If you loved this and want to reciprocate the same feeling to\n                {{ fromPerson }}\n                😊, look no futher. 🤠 Get started again at <span class=\"highlight\"\n                    (click)=\"navigateToSend()\">Send.</span></p>\n            <p *ngIf=\"isSubmitError === true && isSubmitIncorrectSecretCode === true\">{{ incorrectSecretCode }}</p>\n            <p *ngIf=\"isSubmitError === true && isSubmitIncorrectSecretCode === false\">{{ incorrectAnswer }}</p>\n            <br>\n            <button id=\"overlay-close-button\" class=\"btn\" (click)=\"closeOverlay()\"><span>Close</span></button>\n        </nav>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MessageRequest } from '../../models/MessageRequest';\nimport { MessageService } from '../../services/message.service';\nimport { FROM_PERSON_NO_DATA, FROM_PERSON_DATA, TO_PERSON_NO_DATA, TO_PERSON_DATA, CHALLENGE_QUESTION_NO_DATA, CHALLENGE_QUESTION_DATA, CHALLENGE_ANSWER_NO_DATA, CHALLENGE_ANSWER_DATA, MSG_BODY_DATA, MSG_BODY_NO_DATA, FROM_PERSON_INFO, TO_PERSON_INFO, CHALLENGE_QUESTION_INFO, CHALLENGE_ANSWER_INFO, MSG_BODY_INFO, ANONYMOUS_FROM_PERSON, ANONYMOUS_QUESTION, ANONYMOUS_ANSWER, ANONYMOUS_TO_PERSON, RANDOM_MSGS } from '../../utility/constants/data';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-send-message',\n  templateUrl: './send-message.component.html',\n  styleUrls: ['./send-message.component.scss']\n})\nexport class SendMessageComponent implements OnInit {\n  sendForm: FormGroup;\n  sendRequest: MessageRequest = new MessageRequest();\n  requestStatus: boolean = false;\n  uniqueToken: string;\n  messageURL: string;\n  fromPersonInfo = FROM_PERSON_INFO;\n  toPersonInfo = TO_PERSON_INFO;\n  questionInfo = CHALLENGE_QUESTION_INFO;\n  answerInfo = CHALLENGE_ANSWER_INFO;\n  msgInfo = MSG_BODY_INFO;\n  fromPersonNoData = FROM_PERSON_NO_DATA;\n  fromPersonData = FROM_PERSON_DATA;\n  toPersonNoData = TO_PERSON_NO_DATA;\n  toPersonData = TO_PERSON_DATA;\n  questionNoData = CHALLENGE_QUESTION_NO_DATA;\n  questionData = CHALLENGE_QUESTION_DATA;\n  answerNoData = CHALLENGE_ANSWER_NO_DATA;\n  answerData = CHALLENGE_ANSWER_DATA;\n  msgNoData = MSG_BODY_NO_DATA;\n  msgData = MSG_BODY_DATA;\n\n  constructor(private sendService: MessageService, private router: Router) {\n    this.createForm();\n  }\n\n  ngOnInit() {\n\n  }\n\n  createForm(): void {\n    this.sendForm = new FormGroup({\n      'fromPerson': new FormControl('', [Validators.required]),\n      'toPerson': new FormControl('', [Validators.required]),\n      'challengeQuestion': new FormControl('', [Validators.required]),\n      'challengeAnswer': new FormControl('', [Validators.required]),\n      'msgBody': new FormControl('', [Validators.required])\n    });\n  }\n\n  onSubmit() {\n    let fromPerson = this.sendForm.controls['fromPerson'].value;\n    let toPerson = this.sendForm.controls['toPerson'].value;\n    let question = this.sendForm.controls['challengeQuestion'].value;\n    let answer = this.sendForm.controls['challengeAnswer'].value;\n    let message = this.sendForm.controls['msgBody'].value;\n    this.sendRequest.fromPerson = (fromPerson.trim() === \"\" || fromPerson === null ? ANONYMOUS_FROM_PERSON : fromPerson);\n    this.sendRequest.toPerson = (toPerson.trim() === \"\" || toPerson === null ? ANONYMOUS_TO_PERSON : toPerson);\n    this.sendRequest.challengeQuestion = (question.trim() === \"\" || question === null ? ANONYMOUS_QUESTION : question);\n    this.sendRequest.challengeAnswer = (answer.trim() === \"\" || answer === null ? ANONYMOUS_ANSWER : answer);\n    this.sendRequest.msgBody = (message.trim() === \"\" || message === null ? RANDOM_MSGS[this.randomMsgs()] : message);\n    this.sendService.sendMessage(this.sendRequest).subscribe(\n      (response: any) => {\n        this.requestStatus = true;\n        this.messageURL = \"https://rahul-kabra.github.io/say-thank-you/fetch?token=\" + response.confirmationToken;\n        this.uniqueToken = response.secretMessageToken;\n      },\n      (error: any) => {\n        \n      }\n    );\n    this.sendForm.reset();\n  }\n\n  randomMsgs(): number {\n    var randomNumber = Math.floor(Math.random() * 10);\n    return randomNumber;\n  }\n\n  reloadCurrentRoute() {\n    let currentUrl = this.router.url;\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\n      this.router.navigate([currentUrl]);\n    });\n  }\n\n  getRandomMessages() {\n    this.sendForm.controls['msgBody'].setValue(RANDOM_MSGS[this.randomMsgs()]);\n  }\n\n  copyToken(inputElement) {\n    inputElement.select();\n    document.execCommand('copy');\n    document.getElementById(\"copy-to-cb-button\").innerText = \"Copied!\";\n    setTimeout(() => {\n      document.getElementById(\"copy-to-cb-button\").innerText = \"Copy\";\n    }, 1000)\n    inputElement.setSelectionRange(0, 0);\n  }\n}\n","<div class=\"container\">\n    <app-navbar></app-navbar>\n\n    <div id=\"send-guide-div\">\n        <p>Wondering where to start? Don't worry any further, because we've got you covered. 😇 We are here to make\n            things\n            simpler and a little convenient for u. 🥳 Only thing you need to do is think of a beautiful and heartfelt\n            message\n            to convey your thanks to someone who deserves it. 😄\n            Just in case, if that seems like a toughie, we are here to bail you out of that as well. 🤝 We've got some\n            wonderful templates set up which you can either use as is or personalize it if you want to add a dash of\n            personal\n            touch to it. 🤩</p>\n        <p>Without any futher ado, let's conjure up some magic and be thankful to someone today. 😁</p>\n    </div>\n\n    <hr class=\"flair\">\n\n    <div class=\"form-input custom-top-margin\" *ngIf=\"requestStatus===false\">\n        <form [formGroup]=\"sendForm\">\n\n            <div id=\"from-person-div\" class=\"input-div-styles\">\n                <p>{{ fromPersonInfo }}</p>\n                <div class=\"floating\">\n                    <input required id=\"fromPerson\" class=\"floating-input\" name=\"fromPerson\"\n                        formControlName=\"fromPerson\" type=\"text\" placeholder=\"Enter the name...\" />\n                    <label for=\"fromPerson\" class=\"floating-label\" data-content=\"Enter the name...\"></label>\n                </div>\n\n                <p\n                    *ngIf=\"sendForm.controls['fromPerson'].invalid && (sendForm.controls['fromPerson'].dirty || sendForm.controls['fromPerson'].touched)\">\n                    {{ fromPersonNoData }}\n                </p>\n\n                <p\n                    *ngIf=\"sendForm.controls['fromPerson'].valid && (sendForm.controls['fromPerson'].dirty || sendForm.controls['fromPerson'].touched)\">\n                    {{ fromPersonData }}\n                </p>\n            </div>\n\n            <hr class=\"center-square\">\n\n            <div id=\"to-person-div\" class=\"input-div-styles\">\n                <p>{{ toPersonInfo }}</p>\n                <div class=\"floating\">\n                    <input required id=\"toPerson\" class=\"floating-input\" name=\"toPerson\" formControlName=\"toPerson\"\n                        type=\"text\" placeholder=\"Enter the name...\">\n                    <label for=\"toPerson\" class=\"floating-label\" data-content=\"Enter the name...\"></label>\n                </div>\n\n                <p\n                    *ngIf=\"sendForm.controls['toPerson'].invalid && (sendForm.controls['toPerson'].dirty || sendForm.controls['toPerson'].touched)\">\n                    {{ toPersonNoData }}\n                </p>\n\n                <p\n                    *ngIf=\"sendForm.controls['toPerson'].valid && (sendForm.controls['toPerson'].dirty || sendForm.controls['toPerson'].touched)\">\n                    {{ toPersonData }}\n                </p>\n            </div>\n\n            <hr class=\"center-square\">\n\n            <div id=\"challenge-question-div\" class=\"input-div-styles\">\n                <p>{{ questionInfo }}</p>\n                <div class=\"floating\">\n                    <input required id=\"challengeQuestion\" class=\"floating-input\" name=\"challengeQuestion\"\n                        formControlName=\"challengeQuestion\" type=\"text\" placeholder=\"Enter the question...\">\n                    <label for=\"challengeQuestion\" class=\"floating-label\" data-content=\"Enter the question...\"></label>\n                </div>\n\n                <p\n                    *ngIf=\"sendForm.controls['challengeQuestion'].invalid && (sendForm.controls['challengeQuestion'].dirty || sendForm.controls['challengeQuestion'].touched)\">\n                    {{ questionNoData }}\n                </p>\n\n                <p\n                    *ngIf=\"sendForm.controls['challengeQuestion'].valid && (sendForm.controls['challengeQuestion'].dirty || sendForm.controls['challengeQuestion'].touched)\">\n                    {{ questionData }}\n                </p>\n            </div>\n\n            <hr class=\"center-square\">\n\n            <div id=\"challenge-answer-div\" class=\"input-div-styles\">\n                <p>{{ answerInfo }}</p>\n                <div class=\"floating\">\n                    <input required id=\"challengeAnswer\" class=\"floating-input\" name=\"challengeAnswer\"\n                        formControlName=\"challengeAnswer\" type=\"text\" placeholder=\"Enter the answer...\">\n                    <label for=\"challengeAnswer\" class=\"floating-label\" data-content=\"Enter the answer... \"></label>\n                </div>\n\n                <p\n                    *ngIf=\"sendForm.controls['challengeAnswer'].invalid && (sendForm.controls['challengeAnswer'].dirty || sendForm.controls['challengeAnswer'].touched)\">\n                    {{ answerNoData }}\n                </p>\n\n                <p\n                    *ngIf=\"sendForm.controls['challengeAnswer'].valid && (sendForm.controls['challengeAnswer'].dirty || sendForm.controls['challengeAnswer'].touched)\">\n                    {{ answerData }}\n                </p>\n            </div>\n\n            <hr class=\"center-square\">\n\n            <div id=\"msg-body-div\" class=\"input-div-styles\">\n                <p>{{ msgInfo }}</p>\n                <div id=\"textarea-div\">\n                    <textarea required id=\"msgBody\" name=\"msgBody\" formControlName=\"msgBody\"\n                        placeholder=\"Enter the message...\"></textarea>\n                </div>\n\n                <p\n                    *ngIf=\"sendForm.controls['msgBody'].invalid && (sendForm.controls['msgBody'].dirty || sendForm.controls['msgBody'].touched)\">\n                    {{ msgNoData }}\n                </p>\n\n                <p\n                    *ngIf=\"sendForm.controls['msgBody'].valid && (sendForm.controls['msgBody'].dirty || sendForm.controls['msgBody'].touched)\">\n                    {{ msgData }}\n                </p>\n            </div>\n\n            <div class=\"send-form-button-div\">\n                <button class=\"btn\" (click)=\"getRandomMessages()\">\n                    <span>Random</span>\n                </button>\n\n                <button class=\"btn\" (click)=\"onSubmit()\">\n                    <span>Submit</span>\n                </button>\n            </div>\n        </form>\n    </div>\n\n    <div id=\"response-confirmation-div\" *ngIf=\"requestStatus===true\">\n        <p>Hooray!!! Your message is created. 🤟</p>\n        <p>\n            Please share this link with the person whom this message was intended for:\n        </p>\n        <p class=\"url-link\"><a href=\"{{ messageURL }}\" target=\"_blank\" rel=\"noreferrer noopener\">{{ messageURL }}</a>\n        </p>\n        <p>\n            Also, share this unique token:\n        </p>\n        <p>\n            <input id=\"unique-token\" type=\"text\" value=\"{{ uniqueToken }}\" #tokeninput>\n            <button id=\"copy-to-cb-button\" class=\"btn\" (click)=\"copyToken(tokeninput)\">Copy</button>\n        </p>\n        <p>Here's hoping your message made someone's day. 😇 We appreciate you for taking this time off to thank someone\n            near and dear to you. 👌</p>\n        <p>If you wish to extend this fun and awesome activity of thanking others, look no futher. 🤠 Get started again\n            at\n            <span class=\"highlight\" (click)=\"reloadCurrentRoute()\">Send.</span></p>\n    </div>\n\n    <app-footer></app-footer>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-story',\n  templateUrl: './story.component.html',\n  styleUrls: ['./story.component.scss']\n})\nexport class StoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n    <app-navbar></app-navbar>\n\n    <div class=\"story-section custom-top-margin\">\n        <p>A small act of appreciation always brings a smile to someone's face. 😊</p>\n        <p>We all have people in our lives who have stood firmly with us through the best 📈 and worst 📉 of times. They\n            always had and continue to have our back no matter what the circumstances be. 🌪️</p>\n        <p>They are our lifelong support systems and their importance in our life is inevitable. 💪</p>\n        <p>They are our cunning partners when we are up to some mischief. 😝</p>\n        <p>They are our secret keepers and our secret with them is much safer than it would be in a bank vault. 🔐</p>\n        <p>They read our minds and know what we are thinking without even asking us for it. 🤗</p>\n        <p>Our lives without them would be null and void.</p>\n        <p>I too have such wonderful people in my life and this is dedicated to them. 🥳</p>\n        <p>Let us make them feel special. Let us thank them. Let us convey our immense gratitude to them. Let us nourish\n            and\n            nurture this lifelong relationship that we have with them. 🎉</p>\n        <p>Let us pen an emotional note 💌 thanking them for all that they did for us and bring a smile to their faces\n            and\n            brighten ☀️ up their life, one ray at a time. 🌞</p>\n    </div>\n\n    <app-footer></app-footer>\n</div>","export class MessageRequest {\n    fromPerson: string;\n    toPerson: string;\n    challengeQuestion: string;\n    challengeAnswer: string;\n    msgBody: string;\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MessageRequest } from '../models/MessageRequest';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n  readonly baseUrl: string = 'https://say-thank-you-backend.herokuapp.com';\n\n  constructor(private http: HttpClient) {\n\n  }\n\n  public sendMessage(messageRequest: MessageRequest): Observable<any> {\n    return this.http.post(`${this.baseUrl}/sendMessage`, messageRequest);\n  }\n\n  public fetchQuestionnaire(token: string) {\n    return this.http.get(`${this.baseUrl}/fetch?token=${token}`);\n  }\n\n  public getMessage(secretCode: string, challengeAnswer: string) {\n    return this.http.get(`${this.baseUrl}/getMessage?secretCode=${secretCode}&challengeAnswer=${challengeAnswer}`);\n  }\n}\n","export const FROM_PERSON_INFO = \"1. The starting point of expressing your thanks and gratitude to someone is by mentioning your name. 😄\";\nexport const TO_PERSON_INFO = \"2. The person who would be delighted to receive this token of appreciation from you. 😀\";\nexport const CHALLENGE_QUESTION_INFO = \"3. Some challenge for the intended recipient which helps us authenticate that person. Make it a tough one! 😉\";\nexport const CHALLENGE_ANSWER_INFO = \"4. A tricky answer that you think only the recipient would be able to answer. Headscratchers make it fun. 🤣\";\nexport const MSG_BODY_INFO = \"5. The heartfelt message which you want to convey. 🥰\";\n\nexport const FROM_PERSON_NO_DATA = \"Since you don't want to disclose your identity, we'll let it be so and will take care of it. 🤨\";\nexport const FROM_PERSON_DATA = \"Wonderful that you have decided to let yourself known. Cheers! 😎\";\nexport const TO_PERSON_NO_DATA = \"Since you are in two minds about writing the name of the person whom you want to send it to, we'll let it be anonymous. 🤔\";\nexport const TO_PERSON_DATA = \"Yay, it delights us to know the person who will be receiving this. 🤭\";\nexport const CHALLENGE_QUESTION_NO_DATA = \"Don't want to make it difficult for them to decipher your message? Sure then, we'll not. 🥺\";\nexport const CHALLENGE_QUESTION_DATA = \"The treasure hunt's just beginning and I just love it. 😜\";\nexport const CHALLENGE_ANSWER_NO_DATA = \"No? Nada? Nyet? Okay, straight ahead then. 🤐\";\nexport const CHALLENGE_ANSWER_DATA = \"Woohoo! Our recipient's job just got tougher. Make them think. 🤪\";\nexport const MSG_BODY_NO_DATA = \"Don't know what to write? No worries, we'll make it easier for you. 😏\";\nexport const MSG_BODY_DATA = \"Beautiful. Now that's what we've been waiting for all this while. 🤗\";\n\nexport const ANONYMOUS_FROM_PERSON = \"Anonymous\";\nexport const ANONYMOUS_TO_PERSON = \"Anonymous\";\nexport const ANONYMOUS_QUESTION = \"Do you love this site?\";\nexport const ANONYMOUS_ANSWER = \"Absolutely.\";\n\nexport const RANDOM_MSGS = [\n    `Thanks a lot!\n    I really appreciate you being there for me when I needed it the most and helping me sail through my tough times. 🛡\n    Your unconditional support has given me a lot of courage and confidence and I just wanted to convey my utmost gratitude to you. `,\n    `Thanks for being a rock solid support all my life, never leaving my side and putting up with me through the best and worst of times. 🤝`,\n    `Times change, but friends don't. You, my friend are a gem 💎 and I am so fortunate to have had you in my life.\n     I really cherish this gift and will always do. 🎁`,\n    `Don't know if I have said this enough to you.\n     Regardless, thank you for everything that you did for me and I will never forget that. 🤟`,\n    `There are so many things that I couldn't have done without you.\n    Thank you for always going above and beyond for me. 🎆`,\n    `They say that words are very powerful when you want it to be. So here goes,\n    Thank you. ⭐️`,\n    `Thank you...\n    That pretty much sums it up because I will run out of words if I were to express my gratitude to you. ✨`,\n    `Life has been really generous on me. It brought me to you and I couldn't have asked for more. Thank you so much for being there. 🌞`,\n    `When I think about the things I am grateful for, you are always on the list. Eternally indebted to you. 🎉`,\n    `Here's to you being absolutely mindbogglingly fabulous and astonishingly magnificently wonderful. That's a whole lot of adjectives in a single sentence.\n    But I wouldn't have it in any other way, because you deserve it. 🙌`,\n]\n\nexport const SECRET_CODE_INFO = \"The unique token using which you can decipher the lovely message awaiting you. 😛\";","import { Injectable } from '@angular/core';\nimport { LoaderService } from '../loader-service/loader.service';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderInterceptorService {\n\n  constructor(private loaderService: LoaderService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    this.showLoader();\n    return next.handle(req).pipe(tap((event: HttpEvent<any>) => {\n      if (event instanceof HttpResponse) {\n        this.onEnd();\n      }\n    },\n      (error: any) => {\n        this.onEnd();\n      }));\n  }\n\n  private onEnd(): void {\n    this.hideLoader();\n  }\n\n  private showLoader(): void {\n    this.loaderService.show();\n  }\n\n  private hideLoader(): void {\n    this.loaderService.hide();\n  }\n}","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  isLoading = new Subject<boolean>();\n  constructor() { }\n\n  show() {\n    this.isLoading.next(true);\n  }\n\n  hide() {\n    this.isLoading.next(false);\n  }\n}","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { LoaderService } from '../loader-service/loader.service';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n  isLoading: boolean = false;\n  subscription: Subscription;\n  constructor(private loaderService: LoaderService) { }\n\n  ngOnInit() {\n    this.subscription = this.loaderService.isLoading\n      .subscribe((response) => {\n        this.isLoading = response as boolean;\n      });\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}","<div [class.hidden]=\"!isLoading\">\n    <div class=\"loader-overlay\">\n        <div *ngIf=\"isLoading\" class=\"loader\"></div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { paths } from './paths';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PathResolveService implements Resolve<string | null> {\n    resolve(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot\n    ): string | null {\n        const typoPath = state.url.replace('/', '');\n        const threshold = this.getThreshold(typoPath);\n        const dictionary = Object.values(paths)\n            .filter(path => Math.abs(path.length - typoPath.length) < threshold);\n\n        if (!dictionary.length) { return null; }\n\n        this.sortByDistances(typoPath, dictionary);\n\n        return `/${dictionary[0]}`;\n    }\n\n    getThreshold(path: string): number {\n        if (path.length < 5) { return 3; }\n\n        return 5;\n    }\n\n    sortByDistances(typoPath: string, dictionary: string[]) {\n        const pathsDistance = {} as { [name: string]: number };\n\n        dictionary.sort((a, b) => {\n            if (!(a in pathsDistance)) {\n                pathsDistance[a] = this.levenshtein(a, typoPath);\n            }\n            if (!(b in pathsDistance)) {\n                pathsDistance[b] = this.levenshtein(b, typoPath);\n            }\n\n            return pathsDistance[a] - pathsDistance[b];\n        });\n    }\n    /**\n     * Calculate the levenshtein distance of two strings.\n     * See https://en.wikipedia.org/wiki/Levenshtein_distance.\n     * Based off https://gist.github.com/andrei-m/982927 (for using the faster dynamic programming\n     * version).\n     *\n     * @param a String a.\n     * @param b String b.\n     * @returns A number that represents the distance between the two strings. The greater the number\n     *   the more distant the strings are from each others.\n     */\n    levenshtein(a: string, b: string): number {\n        if (a.length === 0) {\n            return b.length;\n        }\n        if (b.length === 0) {\n            return a.length;\n        }\n\n        const matrix = [];\n\n        // increment along the first column of each row\n        for (let i = 0; i <= b.length; i++) {\n            matrix[i] = [i];\n        }\n\n        // increment each column in the first row\n        for (let j = 0; j <= a.length; j++) {\n            matrix[0][j] = j;\n        }\n\n        // Fill in the rest of the matrix\n        for (let i = 1; i <= b.length; i++) {\n            for (let j = 1; j <= a.length; j++) {\n                if (b.charAt(i - 1) === a.charAt(j - 1)) {\n                    matrix[i][j] = matrix[i - 1][j - 1];\n                } else {\n                    matrix[i][j] = Math.min(\n                        matrix[i - 1][j - 1] + 1, // substitution\n                        matrix[i][j - 1] + 1, // insertion\n                        matrix[i - 1][j] + 1, // deletion\n                    );\n                }\n            }\n        }\n\n        return matrix[b.length][a.length];\n    }\n}","export const paths = {\n    home: 'home',\n    send: 'send',\n    fetch: 'fetch',\n    story: 'story'\n};","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}